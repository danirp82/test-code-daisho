{"version":3,"sources":["webpack:///./src/app/components/login/components/login.component.html","webpack:///./src/app/components/login/components/login.component.scss","webpack:///./src/app/components/login/components/login.component.ts","webpack:///./src/app/components/login/login.module.ts","webpack:///./src/app/components/login/login.routing.ts"],"names":[],"mappings":";;;;;;;;;AAAA,ulCAAulC,iBAAiB,irBAAirB,iBAAiB,wQAAwQ,WAAW,4b;;;;;;;;;;;ACA7jE,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AAC3B;AACF;AAEiD;AAOxF;IAQE,wBAAoB,sBAA6C,EAC7C,YAAyB,EACzB,OAAe;QAFf,2BAAsB,GAAtB,sBAAsB,CAAuB;QAC7C,iBAAY,GAAZ,YAAY,CAAa;QACzB,YAAO,GAAP,OAAO,CAAQ;QAN5B,kBAAa,GAAG,gBAAgB,CAAC;QACjC,UAAK,GAAG,KAAK,CAAC;QACd,YAAO,GAAG,mCAAmC,CAAC;IAKjD,CAAC;IAEL,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAEO,kCAAS,GAAjB;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACrC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAEM,8BAAK,GAAZ;QAAA,iBAYC;QAXO,6BAA4C,EAA1C,sBAAQ,EAAE,sBAAgC,CAAC;QACnD,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC;aAClD,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACN,cAAI;YACA,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACpC,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;IACX,CAAC;IApCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAS4C,2FAAqB;YAC/B,0DAAW;YAChB,sDAAM;OAVxB,cAAc,CAqC1B;IAAD,qBAAC;CAAA;AArC0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZc;AACM;AACA;AACkB;AAEH;AACrB;AAazC;IAAA;IAA2B,CAAC;IAAf,WAAW;QAXvB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,0EAAc;aACf;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,qDAAM,CAAC;gBAC7B,kEAAmB;gBACnB,0DAAW;aACZ;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACnBxB;AAAA;AAAA;AAA8D;AAGvD,IAAM,MAAM,GAAW;IAC5B,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0EAAc,EAAE;CACxC,CAAC","file":"components-login-login-module.js","sourcesContent":["module.exports = \"<div class=\\\"page-body-wrapper full-page-wrapper auth-page\\\">\\n  <div class=\\\"content-wrapper d-flex align-items-center auth auth-bg-1 theme-one\\\">\\n    <div class=\\\"row w-100\\\">\\n      <div class=\\\"col-lg-4 mx-auto\\\">\\n        <h2 class=\\\"text-center mb-4\\\">Login</h2>\\n        <div class=\\\"auto-form-wrapper\\\">\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"label\\\">User</label>\\n              <div class=\\\"input-group\\\">\\n\\n                <input type=\\\"text\\\" \\n                       formControlName=\\\"userName\\\"\\n                       placeholder=\\\"UserName or email\\\"\\n                       class=\\\"form-control\\\">\\n                \\n                <div class=\\\"input-group-append\\\">\\n                  <span class=\\\"input-group-text\\\">\\n                    <i class=\\\"fa fa-check-circle\\\"></i>\\n                  </span>\\n                </div>\\n              </div>\\n\\n              <p class=\\\"text-danger\\\" *ngIf=\\\"!loginForm.get('userName').valid && loginForm.get('userName').touched\\\"> {{ inputRequired }} </p>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"label\\\">Password</label>\\n              <div class=\\\"input-group\\\">\\n\\n                <input type=\\\"password\\\" \\n                       formControlName=\\\"password\\\"\\n                       class=\\\"form-control\\\">\\n                \\n                <div class=\\\"input-group-append\\\">\\n                  <span class=\\\"input-group-text\\\">\\n                    <i class=\\\"fa fa-check-circle\\\"></i>\\n                  </span>\\n                </div>\\n              </div>\\n\\n              <p class=\\\"text-danger\\\" *ngIf=\\\"!loginForm.get('password').valid && loginForm.get('password').touched\\\"> {{ inputRequired }} </p>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <button class=\\\"btn btn-primary submit-btn btn-block\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n            </div>\\n\\n            <p class=\\\"text-danger\\\" *ngIf=\\\"error\\\"> {{ message }} </p>\\n            \\n            \\n            <div class=\\\"text-block text-center my-3\\\">\\n              <span class=\\\"text-small font-weight-semibold\\\">Not registered? </span>\\n              <br>\\n              <a routerLink=\\\"/register\\\" class=\\\"text-black text-small\\\">Create account</a>\\n            </div>\\n          </form>\\n        </div>\\n        \\n        \\n      </div>\\n    </div>\\n  </div>\\n  <!-- content-wrapper ends -->\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vY29tcG9uZW50cy9sb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from './../../../core/services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public loginForm: FormGroup;\n\n  public inputRequired = 'Required field';\n  public error = false;\n  public message = 'Username or password is incorrect';\n\n  constructor(private _authenticationService: AuthenticationService,\n              private _formBuilder: FormBuilder,\n              private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  private buildForm(): void {\n    this.loginForm = this._formBuilder.group({\n        userName: ['', Validators.required],\n        password: ['', Validators.required]\n    });\n  }\n\n  public login() {\n    const { userName, password} = this.loginForm.value;\n    this._authenticationService.login(userName, password)\n      .pipe(first())\n      .subscribe(\n          data => {\n              this._router.navigate(['home']);\n          },\n          error => {\n            console.log('Error =>', error);\n            this.error = true;\n          });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\n\nimport { LoginComponent } from './components/login.component';\nimport { routes } from './login.routing';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    FormsModule,\n  ]\n})\nexport class LoginModule { }\n","import { LoginComponent } from './components/login.component';\nimport { Routes } from '@angular/router';\n\nexport const routes: Routes = [\n  { path: '', component: LoginComponent }\n];\n"],"sourceRoot":""}